generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                Int               @id @default(autoincrement())
  name              String
  email             String            @unique
  password          String?
  image             String?
  createdAt         DateTime          @default(now())
  albums            Album[]
  albumOrder        Int[]
  UserPreferences   UserPreferences[]
  isVerified        Boolean           @default(false)
}

model Photo {
  pid               String    @id
  name              String
  uid               Int
  aid               Int?
  aperture          Float?
  iso               Int?
  shutterspeed      String?
  focalLength       Int?
  meteringMode      String?
  exposureMode      String?
  lensModel         String?
  cameraModel       String?
  editingSoftware   String?
  thumbnailForAlbum Album?    @relation("thumbnail")
  bannerForAlbum    Album?    @relation("banner")
  album             Album?    @relation(fields: [aid, uid], references: [aid, uid])
  description       String?
  date              DateTime?
  blurhash          String?
}

model Album {
  aid          Int      @default(autoincrement())
  name         String
  uid          Int
  thumbnailPid String?  @unique
  thumbnail    Photo?   @relation("thumbnail", fields: [thumbnailPid], references: [pid])
  bannerPid    String?  @unique
  banner       Photo?   @relation("banner", fields: [bannerPid], references: [pid])
  user         User     @relation(fields: [uid], references: [id])
  photos       Photo[]
  photoOrder   String[]

  @@id([aid, uid])
}

model UserPreferences {
  uid       Int    @id
  user      User   @relation(fields: [uid], references: [id])
  objectFit String @default("object-contain")
}
